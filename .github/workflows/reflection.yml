name: reflection
on:
  workflow_run:
    workflows: ["test"]
    types: [completed]
  schedule:
    - cron: "0 3 * * *"   # 毎日3:00 UTC
defaults:
  run:
    working-directory: workflow-cookbook
jobs:
  reflect:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write
      issues: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: Resolve artifact run id
        id: artifact-meta
        run: |
          if [ -n "${RUN_ID}" ]; then
            echo "run_id=$RUN_ID" >> "$GITHUB_OUTPUT"
            if [ -n "${RUN_REPOSITORY}" ]; then
              echo "run_repository=$RUN_REPOSITORY" >> "$GITHUB_OUTPUT"
            fi
          else
            echo "::notice title=artifact::No linked workflow_run; skip download"
          fi
        env:
          RUN_ID: ${{ github.event.workflow_run.id || '' }}
          RUN_REPOSITORY: ${{ github.event.workflow_run.repository.full_name || '' }}
      - name: Locate test logs artifact
        if: ${{ steps.artifact-meta.outputs.run_id != '' }}
        id: artifact-locator
        uses: actions/github-script@v7
        with:
          script: |
            const runId = Number(process.env.RUN_ID);
            const repository = process.env.RUN_REPOSITORY ?? '';
            const current = `${context.repo.owner}/${context.repo.repo}`;
            if (!Number.isFinite(runId) || runId <= 0) {
              core.setOutput('artifact-id', '');
              core.setOutput('found', 'false');
              return;
            }
            if (!repository) {
              core.notice(`workflow_run repository unavailable; cross-repo artifacts require a PAT with actions:read permissions.`);
              core.setOutput('artifact-id', '');
              core.setOutput('found', 'false');
              return;
            }
            if (repository && repository !== current) {
              core.notice(`run ${runId} belongs to ${repository}; cross-repo artifacts require a PAT with actions:read permissions.`);
              core.setOutput('artifact-id', '');
              core.setOutput('found', 'false');
              return;
            }
            const { data } = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: runId,
              per_page: 100,
            });
            const match = data.artifacts?.find(
              (artifact) => artifact?.name === 'test-logs' && artifact?.expired !== true,
            );
            if (!match) {
              core.notice(`test-logs artifact not found for run ${runId}; skipping download`);
              core.setOutput('artifact-id', '');
              core.setOutput('found', 'false');
              return;
            }
            core.setOutput('artifact-id', String(match.id ?? ''));
            core.setOutput('found', 'true');
        env:
          RUN_ID: ${{ steps.artifact-meta.outputs.run_id }}
          RUN_REPOSITORY: ${{ steps.artifact-meta.outputs.run_repository || '' }}
      - name: Download test logs
        if: ${{ steps.artifact-locator.outputs.found == 'true' }}
        id: download-logs
        uses: actions/download-artifact@v4.1.7
        with:
          name: test-logs
          path: workflow-cookbook/logs
          run-id: ${{ steps.artifact-meta.outputs.run_id }}
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Analyze logs → report
        working-directory: workflow-cookbook
        run: |
          python scripts/analyze.py
      - name: Commit report
        working-directory: workflow-cookbook
        run: |
          git config user.name "reflect-bot"
          git config user.email "bot@example.com"
          REPORT_PATH="$(python - <<'PY'
          from __future__ import annotations

          from pathlib import Path
          import sys

          try:
              import yaml  # type: ignore
          except ModuleNotFoundError:
              yaml = None


          def _fallback(content: str) -> str:
              report_indent = None
              quote = chr(34)
              for raw_line in content.splitlines():
                  stripped = raw_line.strip()
                  if not stripped or stripped.startswith("#"):
                      continue
                  indent = len(raw_line) - len(raw_line.lstrip())
                  if stripped.startswith("report:"):
                      report_indent = indent
                      continue
                  if report_indent is not None:
                      if indent <= report_indent and ":" in stripped:
                          report_indent = None
                      if stripped.startswith("output:"):
                          value = stripped.split(":", 1)[1].strip()
                          if value.startswith(quote) and value.endswith(quote):
                              value = value[1:-1]
                          return value
              raise SystemExit("report.output not found")


          def main() -> None:
              content = Path("reflection.yaml").read_text(encoding="utf-8")
              if yaml is None:
                  sys.stdout.write(_fallback(content))
                  return
              data = yaml.safe_load(content)
              sys.stdout.write(data["report"]["output"])


          if __name__ == "__main__":
              main()
          PY
          )"
          git add "$REPORT_PATH"
          git commit -m "chore(report): reflection report [skip ci]" || echo "no changes"
          git push || true
      - name: Open issue if needed (draft memo)
        # Skip issue creation when no suggestions were produced (hashFiles returns '0' when missing).
        if: ${{ hashFiles('workflow-cookbook/reports/issue_suggestions.md') != '0' }}
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: "反省TODO ${{ github.run_id }}"
          content-filepath: workflow-cookbook/reports/issue_suggestions.md
          labels: reflection, needs-triage
      - name: Open draft PR with doc/test tweaks (disabled)
        if: ${{ false }}  # デチューン：無効化
        uses: peter-evans/create-pull-request@v6
        with:
          title: "Reflection suggestions (draft)"
          draft: true
          labels: reflection
